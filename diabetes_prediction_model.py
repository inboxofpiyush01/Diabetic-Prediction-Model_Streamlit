# -*- coding: utf-8 -*-
"""Diabetes_Prediction_Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13447mPb3x4GjSXp0HrKBRibt94fsqjxu
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier
import pickle

df=pd.read_csv("dataset.csv")
df.shape

df.head()

df=df.drop(["education"],axis=1)

df.info()

df.isnull().sum()

df['BPMeds'].value_counts()

df['BPMeds'].fillna(1,inplace=True)

coll_null=['cigsPerDay','totChol','BMI','glucose','heartRate']

for cols in coll_null:
    df[cols].fillna(df[cols].median(),inplace=True)

df.isnull().sum()

from imblearn.over_sampling import SMOTE
sm=SMOTE(random_state=42)
X,y=sm.fit_resample(df.drop(["diabetes"],axis=1),df["diabetes"])

# X=df.drop(["diabetes"],axis=1)
# y=df["diabetes"]

X.shape

stdscalar=StandardScaler()
X_scaled=stdscalar.fit_transform(X)
X=pd.DataFrame(X_scaled,columns=X.columns)

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

model=RandomForestClassifier(n_estimators=100,random_state=42)
model.fit(X_train,y_train)

model.score(X_test,y_test)

import joblib
model=joblib.dump(model,'model.pkl')

from sklearn.metrics import classification_report
y_pred=model.predict(X_test)
print(classification_report(y_test,y_pred))

X_test.head()

